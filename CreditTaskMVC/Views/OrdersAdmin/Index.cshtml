@model IEnumerable<CreditTaskMVC.Models.Order>

@{
    ViewBag.Title = "Index";
}

<h2>Order</h2>

@{
    // Get the current sorting direction from query string
    string sortDirection = Request.QueryString["sortDirection"];
    bool isAscending = sortDirection != "desc";

    // Sort the orders by order_date and direction
    var sortedOrders = isAscending ? Model.OrderBy(o => o.order_date) : Model.OrderByDescending(o => o.quantity);
}

<!-- Add sorting buttons -->
<div>
    @if (isAscending)
    {
        @Html.ActionLink("Back to normal", "Index", new { sortDirection = "desc" })
    }
    else
    {
        @Html.ActionLink("Best-selling products", "Index", new { sortDirection = "asc" })
    }
</div>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.order_date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.product_name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.status_payment)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Agent.agent_name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Reseller.reseller_name)
        </th>
        <th></th>
    </tr>

    @foreach (var item in sortedOrders)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.order_date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.product_name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.status_payment)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Agent.agent_name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Reseller.reseller_name)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.order_id }) |
                @Html.ActionLink("Details", "Details", new { id = item.order_id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.order_id }) |
            </td>
        </tr>
    }

</table>
<button onclick="window.print()">Print Page</button>

